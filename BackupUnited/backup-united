#!/bin/bash

function pause(){
local message="$@"
[ -z $message ] && message="Press [Enter] to continue ..."
read -p "$message" readEnterKey
}

function show_menu(){
date
echo "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
echo "Backup United"
echo "--------------------------------"
echo " 1.Backup List"	
echo "--------------------------------"
echo " 2.Add Backup"
echo " 3.Del Backup"
echo " 4.Added Backups"
echo "--------------------------------"
echo " 5.Clean Backup"
echo " 6.Restore Backup"
echo " 7.Backup Now"
echo "--------------------------------"
echo " 8.Mail Notification Settings"
echo " 9.Add/Remove Mail Recipient"
echo " 10.Schedule Tasks"
echo "--------------------------------"
echo "99.Exit"
echo "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
}

function backup_list(){
ls /usr/local/backup-united/backup/ > /tmp/folderlist
numfolder=$(cat /tmp/folderlist | wc -l)
i=1
while [ "$i" -le $numfolder ]; do
folder=$(ls -l | sed -n $i{p} /tmp/folderlist)
cd /usr/local/backup-united/backup/$folder
pwd
rdiff-backup -l /usr/local/backup-united/backup/$folder
i=$(( i + 1 ))
done
rm -rf /tmp/folderlist
pause
}

function add_backup(){
choice=$(whiptail --title "types of backup" --radiolist "Choose:"     30 40 20 \
	"local-folder_Backup" "" off \
	"cifs-share_Backup" "" off 3>&1 1>&2 2>&3)
case $choice in
local-folder_Backup)
BACKUPNAME=$(whiptail --title "Backup Name" --inputbox "Please Enter Backup Name to be Defined" 10 60  3>&1 1>&2 2>&3)
BACKUPPATH=$(whiptail --title "Path of the Area" --inputbox "Please Enter the Destination of the Backup Area (/mnt/backup1,/var/www)" 10 60  3>&1 1>&2 2>&3)
cat > /usr/local/backup-united/backup-scripts/$BACKUPNAME <<EOF
#!/bin/bash
BCKDATE='"$(date)"'
BCKSTATE=1
rdiff-backup /mnt/backup-1 /usr/local/backup-united/backup/Backup1 > /dev/null && BCKSTATE=0 && \
	echo "Backup1     Successfully    " '"$BCKDATE"' >> /usr/local/backup-united/notification/mail-message
if [ '"$BCKSTATE"' = 1 ]
then
echo "Backup1     FAILED          " '"$BCKDATE"' >> /usr/local/backup-united/notification/mail-message
fi
EOF
;;
cifs-share_Backup)
echo "cifs-share Backup"
BACKUPNAME=$(whiptail --title "Backup Name" --inputbox "Please Enter Backup Name to be Defined" 10 60  3>&1 1>&2 2>&3)
BACKUPPATH=$(whiptail --title "Path of the Area" --inputbox "Please Enter the Destination of the Backup Area (//SERVER_IP/SHARE)" 10 60  3>&1 1>&2 2>&3)
BACKUPUSR=$(whiptail --title "Username" --inputbox "Please Enter Username for Access" 10 60  3>&1 1>&2 2>&3)
BACKUPPWD=$(whiptail --title "Password" --inputbox "Please Enter Password for Access" 10 60  3>&1 1>&2 2>&3)

cat > /usr/local/backup-united/backup-scripts/$BACKUPNAME <<EOF
#!/bin/bash
if [ -d "/tmp/$BACKUPNAME" ]; then
rm -rf /tmp/$BACKUPNAME
fi
if [ -e "/tmp/mountok" ]; then
rm -rf /tmp/mountok
fi
if [ ! -d "/usr/local/backup-united/backup/$BACKUPNAME" ]; then
mkdir /usr/local/backup-united/backup/$BACKUPNAME
fi

mkdir /tmp/$BACKUPNAME
mount -t cifs $BACKUPPATH /tmp/$BACKUPNAME -o username=$BACKUPUSR,password=$BACKUPPWD && touch /tmp/mountok
if [ -e "/tmp/mountok" ]
then
rdiff-backup /tmp/$BACKUPNAME/ /usr/local/backup-united/backup/$BACKUPNAME
echo "SUCCESS $BACKUPNAME" >> /usr/local/backup-united/mail-message
umount /tmp/$BACKUPNAME
rm -rf /tmp/mountok
else
echo "FAILURE $BACKUPNAME" >> /usr/local/backup-united/mail-message
fi
EOF
;;
*)
;;
esac
pause
}

function del_backup(){
BACKUPNAME=$(whiptail --title "Backup Name" --inputbox "Please Enter Backup Name to be Deleted" 10 60  3>&1 1>&2 2>&3)
if [ -e "/usr/local/backup-united/scripts/$BACKUPNAME" ]
then
rm -rf /usr/local/backup-united/backup-scripts/$BACKUPNAME
else
whiptail --msgbox "Backup Not Found!!" 20 20
fi
pause
}

function added_backups(){
echo "*** Added Backup List ***"
ls /usr/local/backup-united/backup-scripts  > /tmp/backuplist.txt
cat /tmp/backuplist.txt
rm -f /tmp/backuplist.txt
pause
}

function clean_backup(){
ls /usr/local/backup-united/backup/ > /tmp/folderlist
numfolder=$(cat /tmp/folderlist | wc -l)
i=1
while [ "$i" -le $numfolder ]; do
folder=$(ls -l | sed -n $i{p} /tmp/folderlist)
cd /usr/local/backup-united/backup/$folder
pwd
rdiff-backup --remove-older-than 15D /usr/local/backup-united/backup/$folder
i=$(( i + 1 ))
done
rm -rf /tmp/folderlist
pause
}

function backup_now(){
cp /usr/local/backup-united/notification/99-mail-sender /usr/local/backup-united/backup-scripts/
chmod +x /usr/local/backup-united/backup-scripts/*
run-parts /usr/local/backup-united/backup-scripts
pause
}

function mail_settings(){
MAILADDR=$(whiptail --title "Backup Name" --inputbox "Please Enter E-Mail Address" 10 60  3>&1 1>&2 2>&3)
SMTP=$(whiptail --title "Path of the Area" --inputbox "Please Enter SMTP Address-SMTP Port your Mailserver (smtp.gmail.com:587)" 10 60  3>&1 1>&2 2>&3)
MAILUSER=$(whiptail --title "Username" --inputbox "Please Enter Username for E-Mail Address" 10 60  3>&1 1>&2 2>&3)
MAILPASS=$(whiptail --title "Password" --inputbox "Please Enter Password for E-Mail Address" 10 60  3>&1 1>&2 2>&3)
MAILDOMAIN=$(whiptail --title "Domain" --inputbox "Please Enter Domain for E-Mail Address (gmail.com,xyz.net etc)" 10 60  3>&1 1>&2 2>&3)
cat /dev/null > /etc/ssmtp/ssmtp.conf
cat > /etc/ssmtp/ssmtp.conf <<EOF
root=$MAILADDR
mailhub=$SMTP
AuthUser=$MAILUSER
AuthPass=$MAILPASS
UseTLS=YES
UseSTARTTLS=YES
rewriteDomain=$MAILDOMAIN
hostname=$HOSTNAME
FromLineOverride=YES
EOF
echo root:$MAILADDR:$SMTP
chfn -f 'backup-united' root

cp /usr/local/backup-united/notification/99-mail-sender /usr/local/backup-united/backup-scripts/
pause
}

function add_recipients(){
vim /usr/local/backup-united/notification/mail-recipients
pause
}

function read_input(){
local c
read -p "Please choose from Menu numbers " c
case $c in
1)	backup_list;;
2)	add_backup;;
3)	del_backup;;
4)	added_backups;;
5)      clean_backup;;
7)	backup_now;;
8)	mail_settings;;
9)	add_recipients;;
99)	exit 0 ;;
*)	
echo "Please choose from Menu numbers"
pause
esac
}

# CTRL+C, CTRL+Z
trap '' SIGINT SIGQUIT SIGTSTP

while true
do
clear
show_menu
read_input
done
